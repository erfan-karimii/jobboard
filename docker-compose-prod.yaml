services:
  db:
    image: docker.arvancloud.ir/postgres:14.1
    container_name: db_api
    ports:
      - 5432:5432
    env_file:
      - db.env
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U admin -d db"]
      interval: 5s
      timeout: 5s
      retries: 5

    volumes:
      - postgres-volume:/var/lib/postgresql/data


  django:
    build:
      context: .
      dockerfile: docker/prod.Dockerfile
    
    entrypoint: /entrypoint.sh
    # command: sleep infinity
    container_name: jobboard-backend
    env_file:
      - db.env
    environment:
      - DJANGO_SETTINGS_MODULE=core.settings.prod
    volumes:
      - ./core/:/app
      - static_volume:/app/static_root/
      - media_volume:/app/media/
    depends_on:
      db:
        condition: service_healthy
    restart: on-failure
    expose:
      - "8000"
    
  nginx:
    image: docker.arvancloud.ir/nginx:1.25.3-alpine
    container_name: jobboard-nginx
    restart: always
    ports: 
      - "80:80"
    volumes:
      - ./default.conf:/etc/nginx/conf.d/default.conf
      - static_volume:/app/static_root/
      - media_volume:/app/media/
    depends_on:
      - django

  redis:
    container_name: redis3
    image: docker.arvancloud.ir/redis:bookworm 
    healthcheck:
      test: [ "CMD", "redis-cli", "--raw", "incr", "ping" ]
    # volumes:
    #   - redis_data:/data


volumes:
  postgres-volume:
  static_volume:
  media_volume:
  redis_data: